{"version":3,"sources":["components/QuizForm.js","components/QuizHistory.js","components/QuizInfo.js","components/QuizTable.js","components/QuizContainer.js","App.js","index.js"],"names":["QuizForm","props","userInput","setUserInput","className","onSubmit","ref","inputEl","type","placeholder","value","onChange","e","parseInt","target","QuizHistory","history","length","map","index","quiz","left","right","userAnswer","rightAnswer","isRight","QuizInfo","quizRange","quizList","quizIndex","quizSequence","quizSequnce","minLeft","maxLeft","minRight","maxRight","QuizTable","leftLength","rightLength","renderCell","Array","keys","renderRow","tableEl","QuizContainer","buildQuizList","list","i","j","push","useState","setQuizList","setHistory","setQuizIndex","array","Math","floor","random","temp","shuffle","useRef","useEffect","preventDefault","prevState","checkAnswer","currentQuiz","targetRow","targetCol","cell","current","rows","cells","innerHTML","updateTable","focus","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2713942f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './QuizForm.css';\r\n\r\nfunction QuizForm(props) {\r\n\r\n  const [userInput, setUserInput] = props.userInput;\r\n\r\n  const handleChange = (e) => {\r\n    setUserInput(parseInt(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"quiz-form center\">\r\n        <form onSubmit={props.onSubmit}>\r\n          <input className=\"quiz-input\"\r\n                 ref={props.inputEl}\r\n                 type=\"number\"\r\n                 placeholder=\"Answer\"\r\n                 value={userInput}\r\n                 onChange={handleChange}\r\n          />\r\n          <button className=\"btn btn-success\" type=\"submit\">제출</button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QuizForm;","import React from 'react';\r\n\r\nfunction QuizHistory(props) {\r\n\r\n  const history = props.history;\r\n\r\n  if (history.length >= 1) {\r\n    return (\r\n      <>\r\n        <ol className=\"history-list\">\r\n          {history.map((e, index) => {\r\n            return (<li\r\n              key={index}>\r\n              {`문제${index + 1}. ${e.quiz.left} * ${e.quiz.right}`}\r\n              <br/>{`제출: ${e.userAnswer}`}\r\n              <br/>{`정답: ${e.rightAnswer}`}\r\n              <br/>{`결과: ${e.isRight ? '정답' : '오답'}`}</li>)\r\n          })}\r\n        </ol>\r\n      </>\r\n    );\r\n  } else {\r\n    return (<></>);\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default QuizHistory;","import React from 'react';\r\nimport './QuizInfo.css';\r\n\r\nfunction QuizInfo(props) {\r\n  const quizRange = props.quizRange;\r\n  const quizList = props.quizList;\r\n  const quizIndex = props.quizIndex;\r\n  const quizSequence = props.quizSequnce;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"quiz-info center\">\r\n        <div>출제 범위: {`${quizRange.minLeft}~${quizRange.maxLeft}단의`\r\n        + `${quizRange.minRight}~${quizRange.maxRight}배수`}</div>\r\n        <div>{`${quizList[quizSequence[quizIndex]].left} * ${quizList[quizSequence[quizIndex]].right} = ?`}</div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QuizInfo;\r\n","import React from 'react';\r\nimport './QuizTable.css';\r\n\r\nfunction QuizTable(props) {\r\n\r\n  const quizRange = props.quizRange;\r\n  const history = props.history;\r\n\r\n  const leftLength = quizRange.maxLeft - quizRange.minLeft + 1;\r\n  const rightLength = quizRange.maxRight - quizRange.minRight + 1;\r\n\r\n  const renderCell = [...Array(rightLength).keys()].map((e) => {\r\n    return (<td></td>);\r\n  });\r\n\r\n  const renderRow = [...Array(leftLength).keys()].map((e) => {\r\n    return (<tr>\r\n      <td>{e + quizRange.minLeft}</td>\r\n      {renderCell}\r\n    </tr>)\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"quiz-table center\">\r\n        <table ref={props.tableEl}>\r\n          <tr>\r\n            <th>X</th>\r\n            {[...Array(rightLength).keys()].map((e) => {\r\n              return (<th>{e + quizRange.minRight}</th>)\r\n            })}\r\n          </tr>\r\n          {renderRow}\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QuizTable;","import React, {useEffect, useRef, useState} from 'react';\r\nimport QuizForm from \"./QuizForm\";\r\nimport QuizHistory from \"./QuizHistory\";\r\nimport QuizInfo from \"./QuizInfo\";\r\nimport QuizTable from \"./QuizTable\";\r\n\r\nfunction QuizContainer() {\r\n\r\n  const buildQuizList = (quizRange) => {\r\n    let list = [];\r\n    let {minLeft, maxLeft, minRight, maxRight} = quizRange;\r\n    for (let i = minLeft; i <= maxLeft; i++) {\r\n      for (let j = minRight; j <= maxRight; j++) {\r\n        list.push({\r\n          left: i,\r\n          right: j\r\n        })\r\n      }\r\n    }\r\n    return (list);\r\n  };\r\n\r\n  const shuffle = length => {\r\n    let array = [...Array(length).keys()];\r\n    for (let i = array.length - 1; i > 0; i--) { // Durstenfeld shuffle\r\n      let j = Math.floor(Math.random() * (i + 1));\r\n      let temp = array[i];\r\n      array[i] = array[j];\r\n      array[j] = temp;\r\n    }\r\n    return array;\r\n  }\r\n\r\n  const [quizRange, setQuizRange] = useState({\r\n    minLeft: 2,\r\n    maxLeft: 9,\r\n    minRight: 1,\r\n    maxRight: 9\r\n  });\r\n\r\n  const [quizList, setQuizList] = useState(buildQuizList(quizRange));\r\n  const [userInput, setUserInput] = useState();\r\n  const [history, setHistory] = useState([]);\r\n  const [quizIndex, setQuizIndex] = useState(0);\r\n  const [quizSequence, setQuizSequence] = useState(shuffle(quizList.length));\r\n\r\n  const inputEl = useRef(null);\r\n  const tableEl = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setQuizList(buildQuizList(quizRange));\r\n  }, [quizRange]);\r\n\r\n  const checkAnswer = () => {\r\n    const {left, right} = quizList[quizSequence[quizIndex]];\r\n    const isRight = left * right === userInput;\r\n    setHistory(prevState => [...prevState, {\r\n        quiz: quizList[quizSequence[quizIndex]],\r\n        userAnswer: userInput,\r\n        rightAnswer: left * right,\r\n        isRight: isRight\r\n      }]\r\n    );\r\n  }\r\n\r\n  const updateTable = () => {\r\n    const currentQuiz = quizList[quizSequence[quizIndex]];\r\n    const targetRow = currentQuiz.left - quizRange.minLeft + 1; // TODO\r\n    const targetCol = currentQuiz.right - quizRange.minRight + 1; // TODO\r\n    const cell = tableEl.current.rows[targetRow].cells[targetCol];\r\n    cell.innerHTML = currentQuiz.left * currentQuiz.right === userInput ? 'O' : 'X';\r\n    cell.className = currentQuiz.left * currentQuiz.right === userInput ? 'O' : 'X';\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    checkAnswer();\r\n    updateTable();\r\n    setQuizIndex(prevState => prevState + 1);\r\n    setUserInput('');\r\n    inputEl.current.focus();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <QuizTable quizRange={quizRange}\r\n                 history={history}\r\n                 tableEl={tableEl}/>\r\n\r\n      <QuizInfo quizRange={quizRange}\r\n                quizList={quizList}\r\n                quizIndex={quizIndex}\r\n                quizSequnce={quizSequence}/>\r\n\r\n      <QuizForm userInput={[userInput, setUserInput]}\r\n                onSubmit={handleSubmit}\r\n                inputEl={inputEl}/>\r\n\r\n      <QuizHistory history={history}/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QuizContainer;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport QuizContainer from \"./components/QuizContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <QuizContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}